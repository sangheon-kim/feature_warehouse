openapi: 3.0.1
info:
  title: API Warehouse
  description: '`Sangheon Kim`''s Warehouse'
  contact:
    email: ksj8367@gmail.com
  version: 0.0.1
servers:
  - url: 'http://localhost:8000/v1'
  - url: 'https://localhost:8000/v1'
tags:
  - name: app
    description: 글로벌 라우트
  - name: auth
    description: 인증관련 라우트
  - name: user
    description: 유저 관련 라우트
  - name: post
    description: 게시판 관련 라우트
paths:
  /posts:
    /posts:
      get:
        tags:
          - post
        summary: 게시글 전체 조회
        description: 게시글을 전체 조회합니다.
        operationId: getAllPosts
        responses:
          '200':
            description: 전체 게시글 조회 성공
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Post'
          '500':
            description: 서버 사이드 오류
components:
  schemas:
    Post:
      type: object
      properties:
        _id:
          type: string
          example: 6210e941d7f1f80132da8de0
        author:
          type: string
          example: sangheon-kim (ksj8367@gmail.com)
        content:
          type: string
          example: test Content
        title:
          type: string
          example: Test Title
        __v:
          type: integer
          example: 0
    Order:
      type: object
      properties:
        id:
          type: integer
          format: int64
        petId:
          type: integer
          format: int64
        quantity:
          type: integer
          format: int32
        shipDate:
          type: string
          format: date-time
        status:
          type: string
          description: Order Status
          enum:
            - placed
            - approved
            - delivered
        complete:
          type: boolean
          default: false
      xml:
        name: Order
    Category:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      xml:
        name: Category
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        password:
          type: string
        phone:
          type: string
        userStatus:
          type: integer
          description: User Status
          format: int32
      xml:
        name: User
    Tag:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      xml:
        name: Tag
    Pet:
      required:
        - name
        - photoUrls
      type: object
      properties:
        id:
          type: integer
          format: int64
        category:
          $ref: '#/components/schemas/Category'
        name:
          type: string
          example: doggie
        photoUrls:
          type: array
          xml:
            name: photoUrl
            wrapped: true
          items:
            type: string
        tags:
          type: array
          xml:
            name: tag
            wrapped: true
          items:
            $ref: '#/components/schemas/Tag'
        status:
          type: string
          description: pet status in the store
          enum:
            - available
            - pending
            - sold
      xml:
        name: Pet
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
  securitySchemes:
    petstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: 'http://petstore.swagger.io/oauth/dialog'
          scopes:
            'write:pets': modify pets in your account
            'read:pets': read your pets
    api_key:
      type: apiKey
      name: api_key
      in: header
